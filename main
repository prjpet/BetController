"""
main.py 
    Downloads the HTML of a website on the supplied URL
    
    If time is between 00:00 amd max_bet_time and odds for Over is > then min_odd_to_bet then place the bet
"""
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from selenium.common.exceptions import WebDriverException
from selenium.webdriver.common.by import By

from LoadOdds import LoadOdds

if __name__ == "__main__":
    LoadOdds = LoadOdds()
    #1. PREPARE WEBSITE:
    # - Click through the correct links until on the correct page (Overview - Soccer)
    LoadOdds.locateElementByTextAndClick("English")
    LoadOdds.locateElementByTextAndClick("In-Play")

    # - Some of the games might be closed - need to know which ones - load those into a list
    closedGameList = []#LoadOdds.locateElementByCssAndLoad("div.ipo-Competition.ipo-Competition-closed ")

    # - If this list is longer than 1, click through those links to open the games
    if len(closedGameList) >= 1:
        for item in closedGameList:

            LoadOdds.locateElementByCssAndClick("div.ipo-Competition.ipo-Competition-closed ")

    # 2. LOAD DATA:
    teamList = LoadOdds.locateElementByClassAndLoad("ipo-TeamStack_Team")
    oddList = LoadOdds.locateElementByClassAndLoad("gl-ParticipantCentered_Odds")
    timeList = LoadOdds.locateElementByClassAndLoad("ipo-InPlayTimer")
    handicapList = LoadOdds.locateElementByClassAndLoad("gl-ParticipantCentered_Handicap")

    # 3. ORGANISE DATA:
    # - merge teams in games on:
    gamesOn = []
    for item in teamList[0::3]:
        gamesOn.append(item.text + " vs " + teamList[teamList.index(item) + 1].text)
    #zip all lists together:
    organisedData = [[a.text, b, c.text, d.text] for a, b, c, d in zip(timeList, gamesOn, oddList[6::8], handicapList[0::2])]

    for item in organisedData:
        print(item)


    MaxTimePlayedMinutes = 95
    MaxValueOver = 5.5


    """
    for i, item in enumerate(timeList):
      if (int(item.text[:2])<MaxTimePlayedMinutes and float(handicapList[i*2-2].text[-3:])<MaxValueOver):
        try:
            print("game_minute: "+item.text[:2]+" Teams: " + teamList[i*3].text + " vs "+ teamList[i*9-2].text+" Value for over: "+handicapList[i*2-2].text[-3:]+" Odd: "+oddList[i * 9].text)
        except IndexError as e:
            print(e)
    """


    # f = open('workfile.txt', 'w')
    #
    # for i, item in enumerate(oddList):
    #     outputString = ""
    #     if i < len(teamList):
    #         outputString += teamList[i].text + ", "
    #     else:
    #         outputString += ", "
    #
    #     if i < len(timeList):
    #         outputString += timeList[i].text + ", "
    #     else:
    #         outputString += ", "
    #
    #     if i < len(handicapList):
    #         outputString += handicapList[i].text + ", "
    #     else:
    #         outputString += ", "
    #
    #     outputString += item.text + "\n"
    #
    #     f.write(outputString)




