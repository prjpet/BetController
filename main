#USER VARIABLES
betOptions = "unkown"   #
EndTime = "unkown"      #Last minute that is permiteted to bet
StartTime = "unkown"    #First minute that is permited to bet
MinValOdd = "unkown"    #Minimum value for the odd that is permited to bet
minDelay = 4          #Minumum time delay in seconds
MaxDelay = 10         #Maximum time delay in seconds

from LoadBrowser import LoadBrowser
from Game import Game
import random, time




if __name__ == "__main__":


    LoadBrowser = LoadBrowser()
    #1. PREPARE WEBSITE:
    # - Click through the correct links until on the correct page (Overview - Soccer)
    # missing: delay between interaction
    LoadBrowser.locateElementByTextAndClick("English")
    LoadBrowser.locateElementByTextAndClick("In-Play")

    #2. LOGIN

    #LoadOdds.locateUsernameAndPassword("input.hm-Login_InputField", "username","password")
    #LoadOdds.locateElementByCssAndClick("button.hm-Login_LoginBtn")


    #3. CLICK "Event View"
    LoadBrowser.locateElementByXpathAndClick("//span/div[2]")

    # 4. LOAD GAME DATA:
    # missing: score, betOptions, nameOfOdds, odds
    teamList = LoadBrowser.locateElementByClassAndLoad("ipn-TeamStack_Team")
    timeList = LoadBrowser.locateElementByClassAndLoad("ipn-ScoreDisplayStandard_Timer")
    scoreList= LoadBrowser.locateElementByClassAndLoad("ipn-ScoreDisplayStandard_Score")

    buttons = LoadBrowser.loadElementsByClassOnPage("ipn-FixtureButton ")# - THIS LOADS ALL GAMES ON PAGE WITH SCORES AND CURRENT TIME ans score
    availableGames = []

    #using a generator function go through every second element in the list, and also grab i to be the index of correct element, not standard increment
    for i in range(0, min(len(teamList),len(timeList),len(scoreList))):

        #THEN append a game with time: T1 ----------------- T2 --------------- TIME ------------ SCORE -----
        availableGames.append(Game(teamList[i*2].text, teamList[i*2+1].text, timeList[i].text, scoreList[i].text))

    #DISPLAY ALL REGISTERED GAMES
    for i, item in enumerate(availableGames):
        a = random.uniform(minDelay, MaxDelay)  # example of Random time delay
        #if i==0:
        LoadBrowser.locateElementByTextAndClick(buttons[i].text[1:buttons[i].text.find("-")-1])
        #else:
            #LoadBrowser.locateElementByXpathAndClick("//div["+str(i+1)+"]/div/div[2]/div[2]")
        time.sleep(1)  # delays for 5 seconds
        print ("random time delay in seconds : ", a, " and i is:", i )




"""
User Variables:
betOptions, EndTime, StartTime, MinValOdd, minDelay, MaxDelay

Game properties:
BetTRUE, Team1, team2, time, score, betOptions, (nameOfOdds, odds)

-1. DEFINE selected bet options - get proper string name into variable
0-load ALL GAMES
1-first game - Team1, team2, time, score, betOptions, (nameOfOdds, odds)
2 if score is different from 0:0 OR
    time is not in interval StartTime, EndTime OR
    the betOptions (1st half score or 2nd half score) doesn't exist THEN 
    click on next game 
3 else read the (nameOfOdds, odds) value for bet option
4.if odds values are bigger then MinValOdd(1.41) AND
BetTRUE=FALSE
then  BetTRUE - output the game + minute + score + odds value into a txt file

if score is different from 0:0 AND
betOptions is == 2nd half score AND
odds values are bigger then MinValOdd AND
betTRUE ==FALSE
then  BetTRUE - output the game + minute + score + odds value into a txt file

-UPDATE GAME LIST (what is the update frequency???)
-TRY TO ADD FINAL SCORE 

ADD ramdom delays in seconds between actions (minDelay and MaxDelay)
"""